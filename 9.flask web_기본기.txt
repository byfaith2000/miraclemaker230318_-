flask web 기본기

(강사님 복습 - 21.9.6)
https://github.com/egoingsb/offline/wiki/Flask-SQLite

1. DB 자료 불러오기(read.py)
------------------------------------------------------------------
import sqlite3

cnt = sqlite3.connect('topics.db')  //db파일과 연결
result = cnt.execute('SELECT * FROM topic')  //db파일 불러오기
rows = result.fetchall()  //fetchall이 있어야 파이썬에서 사용가능하다...(문법)
for row in rows:
    print(row)
------------------------------------------------------------------



2. flask를 사용해서 웹페이지 만들기(app.py)
------------------------------
from flask import Flask
import sqlite3
app = Flask(__name__)
@app.route('/')   // '/'는 root
def home():
    return "Hello Flask"
app.run(debug=True)
------------------------------


3. db 데이타를 불러내어 웹페이지 만들기(app.py)
---------------------------------------------------------------------------
from flask import Flask
import sqlite3
app = Flask(__name__)
@app.route('/')
def home():
    cnt = sqlite3.connect('topics.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    contents = '<h1><a href="/">Web</a></h1>'
    contents += '<ol>'
    for id, title,body in topics: 
        contents += '<li><a href="/read/'+str(id)+'">'+title+'</a></li>'    
    contents += '</ol>'
    contents +='<h2>Welcome</h2>Hello, WEB'
    return contents
app.run(debug=True)

※db에 있는 칼럼수와 위 for문에 있는 칼럼 수가 다르면 에러남
--------------------------------------------------------------------------



1. flask로 실행하여 http://127.0.0.1:5000/ 만들고 웹브라우저로 실행하는 방법
 (페이지에 랜덤으로 숫자 나오게 하는 법)
- 파이썬 만들어 아래 코딩
=====코드============
from flask import Flask
import random
app = Flask(__name__)

@app.route("/create")           ===>이 단락은 없어도 되네!!
def create():    
    return "<h1>Create</h1>"


@app.route("/")
def hello_world():
    print(1)
    return "Random : "+str(random.random())
app.run()
======================
- Run and Debug 실행
- 항목중 flask 선택하면 실행되면서 터미널에 http://127.0.0.1:5000/ 뜸
- 웹브라우저에 http://127.0.0.1:5000/ 붙여넣기 후 실행
-reload하면 숫자가 랜덤으로 바뀜


2. 랜덤수가 아니라 홈페이지와 매칭하는 방법?





=※==============
app = Flask(_name_)

@app.route("/read/<topicid>")
def read(topicid):
    cnt = sqlite3.connect('flask.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', topics)

=※==============


*DB 2번째 있는 칼럼(title)들을 html 리스트화하는 코드
import sqlite3
import time
from flask import Flask
import random

app = Flask(__name__)

@app.route("/read/<topicid>")
def read(topicid):    
    cnt = sqlite3.connect('topics.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', topics)

    nav = '<ol>'
    for topic in topics:
        nav = nav + '<li>'+topic[1]+'</li>'
    nav = nav + '</ol>'
    
    content = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="index.html">WEB</a></h1>
                '''+nav+'''
                <h2>Welcome</h2>
                Hello, WEB!
            </body>
        </html>
    '''
    return content

@app.route("/create")
def create():    
    return "<h1>Create</h1>"

@app.route("/")
def home():
    cnt = sqlite3.connect('flask_topic.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', result, topics)

    nav = '<ol>'
    for topic in topics:
        nav = nav + '<li>'+topic[1]+'</li>'
    nav = nav + '</ol>'

    content = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="index.html">WEB</a></h1>
                '''+nav+'''
                <h2>Welcome</h2>
                Hello, WEB!
            </body>
        </html>
    '''
    return content


*각 리스트에 hyper-link 추가한 코드
import sqlite3
import time
from flask import Flask
import random

app = Flask(__name__)

@app.route("/read/<topicid>")
def read(topicid):    
    cnt = sqlite3.connect('topics.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', topics)

    nav = '<ol>'
    for topic in topics:
        nav = nav + '<li>'+topic[1]+'</li>'
    nav = nav + '</ol>'
    
    content = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="index.html">WEB</a></h1>
                '''+nav+'''
                <h2>Welcome</h2>
                Hello, WEB!
            </body>
        </html>
    '''
    return content

@app.route("/create")
def create():    
    return "<h1>Create</h1>"

@app.route("/")
def home():
    cnt = sqlite3.connect('flask_topic.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', topics)

    nav = '<ol>'
    for topic in topics:
        nav = nav + '<li><a href="/read/'+str(topic[0])+'">'+topic[1]+'</a></li>'
    nav = nav + '</ol>'
    
    content = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="/">WEB</a></h1>
                '''+nav+'''
                <h2>Welcome</h2>
                Hello, WEB!
            </body>
        </html>
    '''
    return content
        </html>
    '''
    return content



최종???
import sqlite3
from flask import Flask, redirect, request
import random
app = Flask(__name__)

@app.route("/create_process", methods=['POST'])
def create_process():    
    cnt = sqlite3.connect('topics.db')
    title = request.form['title']
    body = request.form['body']
    sql = "INSERT INTO topic (title, body) VALUES('"+title+"', '"+body+"')"
    result = cnt.execute(sql)
    cnt.commit()
    return redirect("/read/"+str(result.lastrowid))

@app.route("/read/<topicid>")
def read(topicid): 
    cnt = sqlite3.connect('topics.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()   

    nav = '<ul>'
    for topic in topics:
        nav = nav + '<li><a href="/read/'+str(topic[0])+'">'+topic[1]+'</a></li>'
    nav = nav + '</ul>'

    result = cnt.execute('SELECT * FROM topic WHERE id='+topicid)
    topic = result.fetchone()
    print('topic', topic)
    content = '<h2>'+topic[1]+'</h2>'+topic[2]
    
    html = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="/">WEB</a></h1>
                '''+nav+'''
                '''+content+'''
                <p><a href="/create">create</a></p>
            </body>
        </html>
    '''
    return html

@app.route("/create")
def create():    
    cnt = sqlite3.connect('topics.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', topics)

    nav = '<ul>'
    for topic in topics:
        nav = nav + '<li><a href="/read/'+str(topic[0])+'">'+topic[1]+'</a></li>'
    nav = nav + '</ul>'
    
    html = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="/">WEB</a></h1>
                '''+nav+'''
                <h2>Welcome</h2>
                <form method="post" action="/create_process">
                    <p><input type="text" name="title" placeholder="title" ></p>
                    <p><textarea name="body" placeholder="body" ></textarea></p>
                    <p><input type="submit" value="create"></p>
                </form> 
            </body>
        </html>
    '''
    return html

@app.route("/")
def home():
    cnt = sqlite3.connect('topics.db')
    result = cnt.execute('SELECT * FROM topic')
    topics = result.fetchall()
    print('topics', topics)

    nav = '<ul>'
    for topic in topics:
        nav = nav + '<li><a href="/read/'+str(topic[0])+'">'+topic[1]+'</a></li>'
    nav = nav + '</ul>'
    
    content = '''
        <!DOCTYPE html>
        <html>
            <body>
                <h1><a href="/">WEB</a></h1>
                '''+nav+'''
                <h2>Welcome</h2>
                Hello, WEB!
                <p><a href="/create">create</a></p>
            </body>
        </html>
    '''
    return content


app.run(debug=True)